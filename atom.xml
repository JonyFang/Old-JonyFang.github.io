<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I'm Jony]]></title>
  <link href="http://jonyfang.github.io/atom.xml" rel="self"/>
  <link href="http://jonyfang.github.io/"/>
  <updated>2015-11-21T21:11:55+08:00</updated>
  <id>http://jonyfang.github.io/</id>
  <author>
    <name><![CDATA[Jony Fang]]></name>
    <email><![CDATA[jony.chunfang@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git 常用命令和 Git Flow 梳理]]></title>
    <link href="http://jonyfang.github.io/blog/2015/11/12/git_command_and_git_branching_model/"/>
    <updated>2015-11-12T00:30:00+08:00</updated>
    <id>http://jonyfang.github.io/blog/2015/11/12/git_command_and_git_branching_model</id>
    <content type="html"><![CDATA[<p><img src="http://7xob7d.com1.z0.glb.clouddn.com/git.png" alt="git" /></p>

<p class="info">用 git 有一段时间了，之前没有详细地了解 git flow，导致协作过程中或多或少出现了一些头疼问题。最近静下心来理了下 git flow 的整个流程，再回头看开朗了不少，总结到这里。介绍的是一些常用的 git 基础命令和 git flow，当然也很重要的，过程中自己在 Github 上建了一个模拟的 <a href="https://github.com/JonyFang/GitTestDemo">Demo</a> 用来熟悉 git flow。其实从理解到动手完成还是有点距离的，笨人有笨法嘛。如有不准确的地方欢迎指正。: )</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#git-" id="markdown-toc-git-">Git 常用命令</a>    <ul>
      <li><a href="#section" id="markdown-toc-section">1. 新开分支</a></li>
      <li><a href="#section-1" id="markdown-toc-section-1">2. 切换到另一个分支</a></li>
      <li><a href="#section-2" id="markdown-toc-section-2">3. 新开分支并切换到新分支</a></li>
      <li><a href="#section-3" id="markdown-toc-section-3">4. 查看分支列表</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">5. 查看远程分支列表</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">6. 向远程仓库提交本地新开的分支</a></li>
      <li><a href="#section-6" id="markdown-toc-section-6">7. 删除远程分支</a></li>
      <li><a href="#section-7" id="markdown-toc-section-7">8. 删除本地分支</a></li>
      <li><a href="#section-8" id="markdown-toc-section-8">9. 更新分支列表信息</a></li>
    </ul>
  </li>
  <li><a href="#git-flow-" id="markdown-toc-git-flow-">Git Flow 梳理</a>    <ul>
      <li><a href="#section-9" id="markdown-toc-section-9">1.主要分支</a></li>
      <li><a href="#section-10" id="markdown-toc-section-10">2.辅助分支</a>        <ul>
          <li><a href="#feature-branches" id="markdown-toc-feature-branches">2.1.Feature branches（功能分支）</a></li>
          <li><a href="#release-branches" id="markdown-toc-release-branches">2.2.Release branches（预发布分支）</a></li>
          <li><a href="#hotfix-branches" id="markdown-toc-hotfix-branches">2.3.Hotfix branches（热修复分支）</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#section-11" id="markdown-toc-section-11">总结</a></li>
</ul>

<h1 id="git-">Git 常用命令</h1>

<p>这里列出了一些比较常用的 git 命令，每个命令介绍后面都带一个简单例子～</p>

<h3 id="section">1. 新开分支</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="err">新分支名</span>
</span><span class="line">	
</span><span class="line"> <span class="c1">#新建分支 develop</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">2. 切换到另一个分支</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="err">分支名</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#切换到 develop 分支</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">3. 新开分支并切换到新分支</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="err">新分支名</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#新开 develop 分支，并切换到此分支</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">4. 查看分支列表</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>头部带 remotes/origin 的，表示远程分支</p>

<h3 id="section-4">5. 查看远程分支列表</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">r</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-5">6. 向远程仓库提交本地新开的分支</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="err">新开分支名</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#提交新建的 develop 分支</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-6">7. 删除远程分支</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="err">远程分支名</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#删除远程仓库中的 develop 分支</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-7">8. 删除本地分支</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="err">分支名</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#删除本地的 develop 分支</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-8">9. 更新分支列表信息</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">fetch</span> <span class="o">-</span><span class="nb">p</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>用于协作时，项目队友添加或删除了远程分支的分支，可以通过这种方式来刷新分支列表信息</p>

<hr />

<h1 id="git-flow-">Git Flow 梳理</h1>

<p><span class="caption-wrapper"><img class="caption" src="http://7xob7d.com1.z0.glb.clouddn.com/git_flow.png" width="575" height="" title="git flow 图示" /><span class="caption-text">git flow 完整图示</span></span></p>

<p>Git 开发模式本质上是一套流程，团队每个成员遵守这套流程以确保完成可控的软件开发过程。<a href="http://nvie.com/posts/a-successful-git-branching-model/">原文参考</a></p>

<h2 id="section-9">1.主要分支</h2>

<p>在远程仓库中有两个主要分支的生命期可以无限长，分别是：</p>

<p><strong><code>Master</code></strong></p>

<p><strong><code>Develop</code></strong></p>

<p><span class="caption-wrapper"><img class="caption" src="http://jonyfang.github.io/images/git_flow/develop_branch.png" width="267" height="" title="develop 和 master 关系图" /><span class="caption-text">develop 和 master 关系图</span></span></p>

<p><strong>master 分支（origin/master）</strong></p>

<p>代码仓库中有且仅有的一条主分支，默认为 master ，在创建版本库时会自动创建。所有提供给用户使用的正式版本的源码，都会在这个分支上发布。也就是说主分支 master 用来发布重大版本。</p>

<p><strong>develop 分支（origin/develop）</strong></p>

<p>日常开发工作都会在 develop 分支上面完成。develop 分支可以用来生成代码的最新隔夜版本（nightly builds）。</p>

<p><strong>创建 <code>develop</code> 分支</strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">develop</span> <span class="n">master</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#push develop 到远程仓库</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当我们在<code>develop</code>上完成了新版本的功能，最终会把所有的修改 <code>merge</code> 到 <strong><code>master</code></strong> 分支。针对每次 <strong><code>master</code></strong> 的修改都会打一个 Tag 作为可发布产品的版本号。</p>

<h2 id="section-10">2.辅助分支</h2>

<p>开发过程中不可能项目人所有都在一个 <code>develop</code> 分支中开发，版本管理会很混乱。所以除了主要分支外，我们还需要一些辅助分支来协助团队成员间的并行开发。</p>

<p><strong>所用到的辅助分支大体分三类：</strong></p>

<ul>
  <li><strong>Feature branches（功能分支）</strong></li>
  <li><strong>Release branches（预发布分支）</strong></li>
  <li><strong>Hotfix branches（热修复分支）</strong></li>
</ul>

<p>通过分支名我们能知道各类型分支都有特定作用，对于他们各自的起始分支和最终的合并分支也都有严格规定。呼，虽然可能会麻烦点，但让人一目了然的效果还是很诱人的。</p>

<p>下面逐一介绍下各类型分支的创建使用和移除方法，过程中我在 <code>Github</code> 中创建一个虚拟的项目用来熟悉整个流程，或许你也可以像我一样做一遍。哈，动手总会有意外收获嘛。废话少说，继续正题～</p>

<h3 id="feature-branches">2.1.Feature branches（功能分支）</h3>

<p><span class="caption-wrapper"><img class="caption" src="http://7xob7d.com1.z0.glb.clouddn.com/feature_branches.png" width="133" height="" title="feature_branches" /><span class="caption-text">feature_branches</span></span></p>

<p><strong>应用场景：</strong></p>

<p>当要开始一个新功能的开发时，我门可以创建一个 <code>Feature branche</code> 。等待这个新功能开发完成并确定应用到新版本中就合并回 <code>develop</code>，那么如果不是就会被很遗憾的丢弃。。。</p>

<p><strong>应用规则：</strong></p>

<ol>
  <li>
    <p>从 <code>develop</code> 分支创建，最终合并回 <code>develop</code> 分支;</p>
  </li>
  <li>
    <p>分支名：feature／＊;</p>
  </li>
</ol>

<p>Tips：这里很多地方说用 <strong>feature-＊</strong> 的方式命名，因为公司项目中用的 <strong>feature／＊</strong>方式，也就习惯了，其实意思是一样的。</p>

<h4 id="creat-a-feature-branch">(1).Creat a feature branch</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">feature</span><span class="o">/</span><span class="nb">test</span> <span class="n">develop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>do something in <code>feature/test</code> branch</p>

<p>push 本地 <code>feature/test</code> 到远处代码库；</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">feature</span><span class="o">/</span><span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="develop--featuretest">(2).切换到 <strong>develop</strong> 合并 <strong>feature/test</strong></h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">develop</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">merge</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">ff</span> <span class="n">feature</span><span class="o">/</span><span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>”- -no-ff” 的作用是创建一个新的 “commit” 对象用于当前合并操作。这样既可以避免丢失该功能分支的历史存在信息，又可以集中该功能分支所有历史提交。并且如果想回退版本也会比较方便。</p>

<p><span class="caption-wrapper"><img class="caption" src="http://7xob7d.com1.z0.glb.clouddn.com/git_merge_noff.png" width="478" height="" title="git merge --no-ff 图示" /><span class="caption-text">git merge - -no-ff 图示</span></span></p>

<h4 id="featuretest-">(3).移除本地和远程仓库的 <strong>feature/test</strong> 分支</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="n">feature</span><span class="o">/</span><span class="nb">test</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="n">feature</span><span class="o">/</span><span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="release-branches">2.2.Release branches（预发布分支）</h3>

<p><strong>应用场景：</strong></p>

<p>“Release branches” 用来做新版本发布前的准备工作，在上面可以做一些小的 bug 修复、准备发布版本号等等和发布有关的小改动，其实已经是一个比较成熟的版本了。另外这样我们既可以在预发布分支上做一些发布前准备，也不会影响 “develop” 分支上下一版本的新功能开发。</p>

<p><strong>应用规则：</strong></p>

<ol>
  <li>
    <p>从 <code>develop</code> 分支创建，最终合并回 <code>develop</code> 和 <code>master</code>;</p>
  </li>
  <li>
    <p>分支名：release-＊;</p>
  </li>
</ol>

<h4 id="creat-a-release-branch">(1).Creat a release branch</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">release</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span> <span class="n">develop</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#push 到远程仓库（可选）</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">release</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>do something in <code>release-1.1</code> branch</p>

<h4 id="master--release-11">(2).切换到 <strong>master</strong> 合并 <strong>release-1.1</strong></h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">master</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">merge</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">ff</span> <span class="n">release</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">tag</span> <span class="o">-</span><span class="n">a</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当我们的 <code>release-1.1</code> 的 Review 完成，也就预示着我们可以发布了。打上相应的版本号，再 <strong>push</strong> 到远程仓库。</p>

<h4 id="develop--release-11">(3).切换到 <strong>develop</strong> 合并 <strong>release-1.1</strong></h4>

<p>预发布分支所做的修改同时也要合并回 <strong>develop</strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">develop</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">merge</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">ff</span> <span class="n">release</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="release-11">(4).移除本地和远程仓库的 <strong>release-1.1</strong></h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="n">release</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="n">release</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="hotfix-branches">2.3.Hotfix branches（热修复分支）</h3>

<p><span class="caption-wrapper"><img class="caption" src="http://7xob7d.com1.z0.glb.clouddn.com/hotfixes.png" width="316" height="" title="Hotfix branches 图示" /><span class="caption-text">Hotfix branches 图示</span></span></p>

<p><strong>应用场景：</strong></p>

<p>“Hotfix branches” 主要用于处理线上版本出现的一些需要立刻修复的 bug 情况.</p>

<p><strong>应用规则：</strong></p>

<ol>
  <li>
    <p>从 <code>master</code> 分支上当前版本号的 <code>tag</code> 处切出，也就是从最新的 <code>master</code> 上创建，最终合并回 <code>develop</code> 和 <code>master</code>;</p>
  </li>
  <li>
    <p>分支名：hotfix-＊;</p>
  </li>
</ol>

<h4 id="creat-a-fixbug-branch">(1).Creat a fixbug branch</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">fixbug</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span> <span class="n">master</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#push 到远程仓库（可选）</span>
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">fixbug</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>do something in <code>fixbug-1.1.1</code> branch</p>

<h4 id="master--fixbug-111">(2).切换到 <strong>master</strong> 合并 <strong>fixbug-1.1.1</strong></h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">master</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">merge</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">ff</span> <span class="n">fixbug</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">tag</span> <span class="o">-</span><span class="n">a</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>bug 修复完成，合并回 <code>master</code> 并打上版本号；</p>

<h4 id="develop--fixbug111">(3).切换到 <strong>develop</strong> 合并 <strong>fixbug－1.1.1</strong></h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">develop</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">merge</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">ff</span> <span class="n">fixbug</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="fixbug-111">(4).移除本地和远程仓库的 <strong>fixbug-1.1.1</strong></h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="n">fixbug</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"> <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="n">fixbug</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h1 id="section-11">总结</h1>

<p>啊哈，又到尾声了。上面的 <code>Git 常用命令</code>和 <code>Git Flow</code> 只是一些基本常识，并没有什么新的东西加入。在平时的团队协作中有些对于我自身而言还是比较新鲜的，比如 tag ，这些一般都交给老大来弄（因为他要 review）：D 。好像跑偏了。。。对自己而言，理一遍后的收获还是不小的，对 Git Flow 的整个流程有了大概的了解，但具体每个 git 命令内部是怎么处理的呢，这个留到后面再梳理一下～</p>

<blockquote>
  <p>参考内容：
<br /><br />
<a href="http://www.ruanyifeng.com/blog/2012/07/git.html">Git分支管理策略</a>
<br />
<a href="http://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model</a></p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoapods 版本升级]]></title>
    <link href="http://jonyfang.github.io/blog/2015/11/09/update_cocoapods/"/>
    <updated>2015-11-09T06:40:00+08:00</updated>
    <id>http://jonyfang.github.io/blog/2015/11/09/update_cocoapods</id>
    <content type="html"><![CDATA[<p><img src="http://7xob7d.com1.z0.glb.clouddn.com/cocoapods.png" alt="git" /></p>

<p>升级 OS X El Capitan 后，Time Machine 恢复下，随后因为遇到 octopress 无法更新博客问题，一番折腾 <a href="http://www.jianshu.com/p/ce5eff554279">octopress 适配了 OS X El Capitan</a>，然而事情总没有那么简单，又丢过来一个问题。</p>


<p>和往常一样使用 Cocoapods ，执行命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">pod</span> <span class="n">install</span>
</span><span class="line"> <span class="c1">#输出信息</span>
</span><span class="line"><span class="sr">/System/</span><span class="no">Library</span><span class="o">/</span><span class="no">Frameworks</span><span class="o">/</span><span class="no">Ruby</span><span class="o">.</span><span class="n">framework</span><span class="o">/</span><span class="no">Versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">rubygems</span><span class="o">/</span><span class="n">dependency</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">296</span><span class="ss">:in</span> <span class="sb">`to_specs&#39;: Could not find &#39;cocoapods&#39; (&gt;= 0) among 59 total gem(s) (Gem::LoadError)</span>
</span><span class="line"><span class="sb">	from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/dependency.rb:307:in `</span><span class="n">to_spec</span><span class="s1">&#39;</span>
</span><span class="line"><span class="s1">	from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_gem.rb:47:in `gem&#39;</span>
</span><span class="line">	<span class="n">from</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="ss">pod</span><span class="p">:</span><span class="mi">22</span><span class="ss">:in</span> <span class="sb">`&lt;main&gt;&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<p>查看 <code>Ruby</code> 版本：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">ruby</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line"> <span class="n">ruby</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="n">p173</span> <span class="p">(</span><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">18</span> <span class="n">revision</span> <span class="mi">51636</span><span class="p">)</span> <span class="o">[</span><span class="n">x86_64</span><span class="o">-</span><span class="n">darwin14</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>看来是升级 <code>Ruby 2.2.3</code> 导致的问题，更新下 Cocoapods 即可，更新步骤：</p>

<p>1、 更新 gem ，国内需切换 <code>gem source</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">sudo</span> <span class="n">gem</span> <span class="n">update</span> <span class="o">--</span><span class="nb">system</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>切换 <code>gem source</code></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">gem</span> <span class="n">sources</span> <span class="o">--</span><span class="n">add</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">ruby</span><span class="o">.</span><span class="n">taobao</span><span class="o">.</span><span class="n">org</span><span class="o">/</span> <span class="o">--</span><span class="n">remove</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span><span class="o">/</span>
</span><span class="line">
</span><span class="line"><span class="err">$</span> <span class="n">gem</span> <span class="n">sources</span> <span class="o">-</span><span class="n">l</span>
</span><span class="line"><span class="o">***</span> <span class="no">CURRENT</span> <span class="no">SOURCES</span><span class="o">***</span>
</span><span class="line">
</span><span class="line"><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">ruby</span><span class="o">.</span><span class="n">taobao</span><span class="o">.</span><span class="n">org</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2、 安装 <code>cocoapods</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">sudo</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">cocoapods</span>
</span><span class="line"> <span class="err">$</span> <span class="n">pod</span> <span class="n">setup</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>和安装过程是一样的，再次查看 <code>pod</code> 版本：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">pod</span> <span class="o">--</span><span class="n">version</span>
</span><span class="line">
</span><span class="line"> <span class="mi">0</span><span class="o">.</span><span class="mi">39</span><span class="o">.</span><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>搞定～</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 适配 OS X El Capitan]]></title>
    <link href="http://jonyfang.github.io/blog/2015/11/08/octopress_adapt_to_elcapitan/"/>
    <updated>2015-11-08T16:30:00+08:00</updated>
    <id>http://jonyfang.github.io/blog/2015/11/08/octopress_adapt_to_elcapitan</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">1、前言</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">2、解决办法</a>    <ul>
      <li><a href="#git-" id="markdown-toc-git-">1. 清理 git 缓存</a></li>
      <li><a href="#rvm" id="markdown-toc-rvm">2. 安装 RVM</a></li>
      <li><a href="#ruby-223" id="markdown-toc-ruby-223">3. 安装 Ruby 2.2.3</a></li>
      <li><a href="#octopress-" id="markdown-toc-octopress-">4. 安装 Octopress 依赖库</a></li>
    </ul>
  </li>
</ul>

<h2 id="section">1、前言</h2>
<p>这几天装上 OS X El Capitan ，Time Machine 恢复后测试 Octopress 遇到无法使用问题，这里总结下问题的解决过程。</p>

<p>首先打开终端，运行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">rake</span> <span class="n">preview</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>报错如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rakepreviewStarting</span> <span class="n">to</span> <span class="n">watchsourcewith</span> <span class="no">Jekyll</span> <span class="ow">and</span> <span class="no">Compass</span><span class="o">.</span> <span class="no">Starting</span> <span class="no">Rack</span> <span class="n">on</span> <span class="n">port</span>
</span><span class="line">
</span><span class="line"><span class="mi">4000</span><span class="n">rake</span> <span class="n">aborted!</span><span class="no">Errno</span><span class="o">::</span><span class="ss">ENOENT</span><span class="p">:</span> <span class="no">No</span> <span class="n">such</span> <span class="n">file</span> <span class="ow">or</span> <span class="n">directory</span> <span class="o">-</span>
</span><span class="line">
</span><span class="line"><span class="n">compass</span><span class="o">/</span><span class="no">Users</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="n">git</span><span class="o">/</span><span class="n">octopress</span><span class="o">/</span><span class="ss">Rakefile</span><span class="p">:</span><span class="mi">85</span><span class="ss">:in</span>
</span><span class="line">
</span><span class="line"><span class="n">spawn</span><span class="o">/</span><span class="no">Users</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="n">git</span><span class="o">/</span><span class="n">octopress</span><span class="o">/</span><span class="ss">Rakefile</span><span class="p">:</span><span class="mi">85</span><span class="ss">:in</span> <span class="n">block</span> <span class="ss">inTasks</span><span class="p">:</span><span class="no">TOP</span><span class="o">=&gt;</span> <span class="n">preview</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<p>在没有升级 OS X EI Capitan 之前一切如常，首先想到是不是 Ruby 的问题</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">ruby</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line">
</span><span class="line"> <span class="c1">#输出</span>
</span><span class="line"> <span class="n">ruby</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">p645</span> <span class="p">(</span><span class="mi">2015</span><span class="o">-</span><span class="mo">04</span><span class="o">-</span><span class="mi">13</span> <span class="n">revision</span> <span class="mi">50299</span><span class="p">)</span> <span class="o">[</span><span class="n">universal</span><span class="o">.</span><span class="n">x86_64</span><span class="o">-</span><span class="n">darwin15</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>和以前一样还是 2.0.0 版本，到官网查看最新版本是 2.2.3，多次尝试更新 <code>ruby</code> 失败。</p>

<h2 id="section-1">2、解决办法</h2>
<p>更新 Ruby 可以通过 <code>rbenv</code> 或 <code>RVM</code>，因为我之前安装是通过 <code>RVM</code> 的方式，这里自己也是通过 <code>RVM</code> 的方式解决的。（附 Google 看到的：<a href="https://gorails.com/setup/osx/10.11-el-capitan">rbenv 更新 Ruby 方法</a>）</p>

<h3 id="git-">1. 清理 git 缓存</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/.</span><span class="n">git</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="rvm">2. 安装 RVM</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">get</span><span class="o">.</span><span class="n">rvm</span><span class="o">.</span><span class="n">io</span> <span class="o">|</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="n">stable</span> <span class="o">--</span><span class="n">ruby</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="ruby-223">3. 安装 Ruby 2.2.3</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">rvm</span> <span class="n">install</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span>
</span><span class="line"> <span class="err">$</span> <span class="n">rvm</span> <span class="n">use</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span>
</span><span class="line"> <span class="err">$</span> <span class="n">rvm</span> <span class="n">rubygems</span> <span class="n">latest</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>查看下 Ruby 版本:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">ruby</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line"> <span class="err">$</span> <span class="n">ruby</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="n">p173</span> <span class="p">(</span><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">18</span> <span class="n">revision</span> <span class="mi">51636</span><span class="p">)</span> <span class="o">[</span><span class="n">x86_64</span><span class="o">-</span><span class="n">darwin14</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>啊哈，切换过来了，其实也很简单，到这里就修复了吗？其实还没有，如你所见还有第4步。</p>

<h3 id="octopress-">4. 安装 Octopress 依赖库</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line"> <span class="err">$</span> <span class="n">sudo</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">bundler</span>
</span><span class="line"> <span class="err">$</span> <span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当 bundler 安装完毕之后，来测试下 <code>rake</code> 命令是否修复了：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="err">$</span> <span class="n">rake</span> <span class="n">generate</span>
</span><span class="line"> <span class="c1">## Generating Site with Jekyll</span>
</span><span class="line">    <span class="n">write</span> <span class="n">source</span><span class="o">/</span><span class="n">stylesheets</span><span class="o">/</span><span class="n">screen</span><span class="o">.</span><span class="n">css</span>
</span><span class="line"><span class="no">Configuration</span> <span class="ss">file</span><span class="p">:</span> <span class="sr">/Users/</span><span class="no">JonyFang</span><span class="o">/</span><span class="no">Desktop</span><span class="o">/</span><span class="n">octopress</span><span class="o">/</span><span class="n">_config</span><span class="o">.</span><span class="n">yml</span>
</span><span class="line">            <span class="ss">Source</span><span class="p">:</span> <span class="n">source</span>
</span><span class="line">       <span class="ss">Destination</span><span class="p">:</span> <span class="kp">public</span>
</span><span class="line">      <span class="no">Generating</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class="line">                    <span class="n">done</span><span class="o">.</span>
</span><span class="line"> <span class="no">Auto</span><span class="o">-</span><span class="ss">regeneration</span><span class="p">:</span> <span class="n">disabled</span><span class="o">.</span> <span class="no">Use</span> <span class="o">--</span><span class="n">watch</span> <span class="n">to</span> <span class="n">enable</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以了～</p>

<p>如果你也同样遇到升级 OS X EI Capitan 后 Octopress 无法使用的情况，希望能对你有所帮助。</p>

<blockquote>
  <p>本文参考：
<br /><br />
<a href="https://github.com/imathis/octopress/issues/1749">When I upgraded the Mac system, I can’t Preview</a>
<br /><br />
<a href="https://gorails.com/setup/osx/10.11-el-capitan">Setup Ruby On Rails on Mac OS X 10.11 El Capitan</a></p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于 Octopress &amp; Github Pages 搭建博客（二）]]></title>
    <link href="http://jonyfang.github.io/blog/2015/10/16/starting_blog_with_octopress_2/"/>
    <updated>2015-10-16T02:37:44+08:00</updated>
    <id>http://jonyfang.github.io/blog/2015/10/16/starting_blog_with_octopress_2</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">1. 前言</a></li>
  <li><a href="#octopress--github-pages" id="markdown-toc-octopress--github-pages">2. 将 Octopress 部署到 Github Pages</a>    <ul>
      <li><a href="#github-repository" id="markdown-toc-github-repository">2.1. 新建 Github repository</a></li>
      <li><a href="#github-pages" id="markdown-toc-github-pages">2.2. 配置 Github Pages</a></li>
      <li><a href="#section-1" id="markdown-toc-section-1">2.3. 生成并部署站点</a></li>
    </ul>
  </li>
  <li><a href="#section-2" id="markdown-toc-section-2">3. 发布博文过程</a>    <ul>
      <li><a href="#section-3" id="markdown-toc-section-3">3.1. 新建一篇博文</a></li>
      <li><a href="#section-4" id="markdown-toc-section-4">3.2. 预览新建的博文</a></li>
      <li><a href="#section-5" id="markdown-toc-section-5">3.3. 发布新建的博文</a></li>
    </ul>
  </li>
</ul>

<h2 id="section">1. 前言</h2>

<p>经过<a href="http://jonyfang.github.io/blog/2015/10/13/ji-yu-octopress-he-github-da-jian-bo-ke/">上一篇</a>，我们在本地搭出了 Octopress 雏形，这一篇首先我们要将本地的 Octopress 博客部署到 Github Pages ，然后发布一篇博文。部署过程中分析了原理，可能会比较枯燥，但是能让我们更了解 Octopress，所以我依旧坚持写下来了。</p>

<p>废话少说，开工～</p>

<!-- more -->

<h2 id="octopress--github-pages">2. 将 Octopress 部署到 Github Pages</h2>

<p>Github 大家应该都有了解过，也是我很喜欢的平台之一，功能真心强大并且可免费使用，这里我们拿来托管我们的博客。</p>

<h3 id="github-repository">2.1. 新建 Github repository</h3>

<p>注册 Github 账号，新建 <a href="https://github.com/new">Github repository</a>。<code>项目名称</code>（Repository name）命名格式为 <code>username.github.io</code> ，<code>username</code> 是你的 <code>Github 用户名</code>（或 organization name，这里和后面我们先不讨论 origanization）。例如我的用户名是 JonyFang，所以输入 JonyFang.github.io 即可。点击 <code>Create repository</code> 创建。</p>

<p class="info">创建完后不要添加任何内容，另外自己过程中产生了两个疑问
<br />
1.为什么用 github.io 而不是 github.com？
<br />
2.为什么是 Repository name 一定要按照 username.github.io 填写？</p>

<p>第一个问题，<a href="https://github.com/blog/1452-new-github-pages-domain-github-io#security-vulnerability">这里</a>解释了为什么把 <code>github.com</code> 改为了 <code>github.io</code>，简而言之是为了安全。</p>

<p>第二个问题，和 Github 内部的结构有关，其次后面会通过 URL 截取填写的 <code>username.github.io</code> 作为博客域名。这样填写格式与 Github 内部结构的具体联系还需要再研究下。若有大神围观，望指教下：）</p>

<h3 id="github-pages">2.2. 配置 Github Pages</h3>

<p>终端执行如下命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">  <span class="err">$</span> <span class="n">rake</span> <span class="n">setup_github_pages</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>该命令会要求我们输入 Github 仓库的 URL 。复制粘贴下我们新建仓库的 <code>SSH</code> 或 <code>HTTPS</code> URL 即可。
（例如：git@github.com:username/username.github.io.git）</p>

<p>那么这里 rake setup_github_pages 做了什么呢？</p>

<p>用户（users）的 Github Pages 使用 <code>master</code> 分支作为 <code>Web 服务</code>（web server）的公开目录，为我们的 <code>Pages url</code> （http://username.github.io）提供内容文件。因此，我们会有这样的需求，<code>source</code> 分支用来做与<code>博客源码</code>相关的事（存放全部博客源码），<code>master</code> 分支上 commit 生成的博客内容<code>供 Web 访问</code>。而 Octopress 帮我们把这件事给搞定了，通过这行 code（好 NB～）。</p>

<p class="info">下面具体分析下 Octopress 是怎么做的（可通过查看 Rakefile 得知）：</p>

<p>(1). 命令要求我们输入 Github Pages 仓库的 URL，也就是我们新建的名为 username.github.io 仓库的 URL。这样命名是为了通过字符串截取 URL 拿到子串（http://username.github.io）作为我们博客的域名；</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># Rakefile 中可查看 URL 截取方式：</span>
</span><span class="line">  <span class="n">repo_url</span> <span class="o">=</span> <span class="n">get_stdin</span><span class="p">(</span><span class="s2">&quot;Repository url: &quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>(2). 将指向（pointing to）imathis/octopress 远程库的名字 <code>‘origin’</code> 改为 <code>‘octopress’</code>；</p>

<p>Git clone 一个仓库时，会将 clone 下来的仓库命名为 origin，没有限定 clone 条件的情况下，会下载仓库中所有数据，并建立一个指向该仓库 master 分支的指针，本地命名为 <code>origin/master</code>。</p>

<p>当我们 clone 了 octopress 仓库，执行如下命令可看到远程仓库信息：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">remote</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># 输出如下，可看到远程仓库名为 origin</span>
</span><span class="line">  <span class="n">origin</span>	<span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">fetch</span><span class="p">)</span>
</span><span class="line">  <span class="n">origin</span>	<span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">push</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>Rakefile</code> 中可看出是通过如下的方式，将 origin 改为 octopress:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git remote rename origin octopress&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这里内部执行了命令 <code>git remote rename origin octopress</code>，当 <code>rake setup_github_pages</code> 执行完毕，再 <code>git remote -v</code> 发现远程库名改为了 octopress。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">remote</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line">  <span class="c1"># 输出如下</span>
</span><span class="line">  <span class="n">octopress</span>	  <span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">fetch</span><span class="p">)</span>
</span><span class="line">  <span class="n">octopress</span>	  <span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">push</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>(3). 添加你的 Github Pages 仓库作为默认的 origin remote，并将远程库中指向 imathis/octopress 中 master 分支的指针指向现在的 origin（即 username/username.github.io）的 master 分支，</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git config branch.master.remote origin&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当 <code>rake setup_github_pages</code> 执行完毕查看远程库，可以看到远程库 origin 指向了 Github Pages。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">remote</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># 输出信息如下</span>
</span><span class="line">  <span class="n">octopress</span>	<span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">fetch</span><span class="p">)</span>
</span><span class="line">  <span class="n">octopress</span>	<span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">push</span><span class="p">)</span>
</span><span class="line">  <span class="n">origin</span>	<span class="n">git</span><span class="vi">@github</span><span class="o">.</span><span class="n">com</span><span class="ss">:JonyFang</span><span class="o">/</span><span class="no">JonyFang</span><span class="o">.</span><span class="n">github</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">fetch</span><span class="p">)</span>
</span><span class="line">  <span class="n">origin</span>	<span class="n">git</span><span class="vi">@github</span><span class="o">.</span><span class="n">com</span><span class="ss">:JonyFang</span><span class="o">/</span><span class="no">JonyFang</span><span class="o">.</span><span class="n">github</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">git</span> <span class="p">(</span><span class="n">push</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>到这里，应该能猜到上一步将指向 <code>imathis/octopress</code> 远程库的名字 <code>origin</code> 改为 <code>octopress</code> 的原因了。</p>

<p>(4). 将本地 master 分支名字从 <code>master</code> 改为 <code>source</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git branch -m master source&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行如下命令查看本地分支（拿到第6条解释为什么要改名为 source）：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">branch</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># 输出如下</span>
</span><span class="line">  <span class="o">*</span> <span class="n">source</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>(5). 根据提供的 Github Pages 仓库的 <code>SSH</code> 或 <code>HTTPS</code> 的 URL，截取仓库名 <code>username.github.io</code> 作为博客的 URL（上面 1 有提到）。然后将 octopress 目录下 <code>_config.yml</code> 文件中 url 参数值改为 <code>http：//username.github.io</code>。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># octopress 下 Rakefile 查看</span>
</span><span class="line">
</span><span class="line">  <span class="n">url</span> <span class="o">=</span> <span class="n">blog_url</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">project</span><span class="p">,</span> <span class="n">source_dir</span><span class="p">)</span>
</span><span class="line">  <span class="n">jekyll_config</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="n">jekyll_config</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^url:.*$/</span><span class="p">,</span> <span class="s2">&quot;url: </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class="line">  <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">jekyll_config</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>(6). 在 octopress 目录下新建 <code>_deploy</code> 目录，并在 _deploy目录下新建 <code>master</code> 分支；</p>

<p>前面4 ，我们将本地 master 分支名字从 <code>master</code> 改为 <code>source</code>，这里一起分析下原因。4和6放在一起容易理解点。</p>

<p>其实本地 octopress 博客部署到 Github Pages 之后，远程 Github 下会有两个分支， <code>master</code> 和 <code>source</code>。远程 <code>master</code> 分支作为 <code>Web 服务</code>公开目录，当你访问 <code>http://username.github.io</code> 时，提供网站内容；远程 <code>source</code> 分支存放的是整个 <code>octopress 框架</code>的源码。</p>

<p>之所以第4步将本地 <code>master</code> 改为 <code>source</code>，是为了把 <code>master 指针</code>让出来，让它指向这一步（6）新建的 <code>_deploy</code> 目录下的 master 分支。这样，<code>octopress/_deploy</code> 目录下的本地 master 分支 就对应了 Github Pages 远程库中的 master 分支，本地 source 分支同理。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile </span>
</span><span class="line">  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git init&quot;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s1">&#39;echo &quot;My Octopress Page is coming soon …&quot; &gt; index.html&#39;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git add .&quot;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="s2">Octopress init</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git branch -m gh-pages&quot;</span> <span class="k">unless</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最后修改了 <code>Rakefile</code> 中 <code>deploy_default</code> 和 <code>deploy_branch</code> 变量的初始值：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># deploy 时执行的命令，&quot;push&quot; 为 Rakefile 中定义的一个 rake task</span>
</span><span class="line">  <span class="n">deploy_default</span> <span class="o">=</span> <span class="s2">&quot;push&quot;</span> <span class="c1"># 初始为 &quot;rsync&quot;</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># deploy 时执行上述 rake task 命令 &quot;push&quot; 到 &quot;master&quot; 分支</span>
</span><span class="line">  <span class="n">deploy_branch</span>  <span class="o">=</span> <span class="s2">&quot;master&quot;</span> <span class="c1"># 初始为 &quot;gh-pages&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再回头来看 <code>rake setup_github_pages</code> ，是不是清晰多了呢？</p>

<h3 id="section-1">2.3. 生成并部署站点</h3>

<p>执行如下命令，（将 <code>octopress/_deploy</code> 下数据 push 到 <code>master</code> 分支）：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">sudo</span> <span class="n">rake</span> <span class="n">generate</span>
</span><span class="line">  <span class="err">$</span> <span class="n">sudo</span> <span class="n">rake</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这时在浏览器输入 <code>http://username.github.io</code> 就可以访问你的博客网页啦～</p>

<p>最后别忘了 commit 你的 <code>octopress 框架源码</code>到 <code>source</code> 分支：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span><span class="s1">&#39;init&#39;</span>  <span class="c1">#init 可随意填写</span>
</span><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">source</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>好，到这里，如果顺利完成前面所有内容的话，我们已经将 <code>Octopress</code> 部署到 <code>Github Pages</code> 了。如果你想换成自己的域名可以参考这里的方法（<a href="http://octopress.org/docs/deploying/github/#custom_domains">Custom Domains</a>），不再赘述了。</p>

<p class="info">这里分析下，<code>rake generate</code> 和 <code>rake deploy</code>。</p>

<p>rake generate：生成 <code>jekyll</code> 站点（Generating Site with Jekyll）</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;compass compile --css-dir </span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/stylesheets&quot;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;jekyll build&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>rake deploy：将站点部署到 <code>Github Pages</code>。由于 <code>_deploy</code> 目录所代表的本地仓库的 <code>master</code> 分支对应 <code>Github Pages</code> 远程仓库的 <code>master</code> 分支，该分支目录的内容即 <code>Github Pages</code> 在互联网上供公开访问的站点内容。因此这里做的主要就是将改动的内容（博客、DIY 布局等…） copy 到 <code>_deploy</code> 目录下，然后将此修改 push 到 <code>Github Pages</code> 远程库的 <code>master</code> 分支。</p>

<ol>
  <li>
    <p>查看是否在 <code>preview-mode</code>(预览模式)，有则删除，重新执行 <code>rake generate</code>；</p>
  </li>
  <li>
    <p>将 <code>octopress/source</code> 目录下的文件拷贝到 <code>octopress/public</code> 目录下；</p>
  </li>
  <li>
    <p>进入 <code>octopress/_deploy</code> 目录，执行 <code>git pull</code> 操作；</p>
  </li>
  <li>
    <p>将 <code>octopress/public</code> 目录的内容拷贝到 <code>octopress/_deploy</code> 目录下；</p>
  </li>
  <li>
    <p>将 <code>octopress/_deploy</code> 目录所对应的本地 <code>master</code> 分支的修改 <code>push</code> 到 <code>Github Pages</code> 远程库的 master 分支。</p>
  </li>
  <li>
    <p>下面可以看到 <code>master</code> 分支 <code>commit</code> 信息格式是 <code>"Site updated at 2015-10-14 12:52:36 UTC"</code> 。</p>
  </li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git add -A&quot;</span>
</span><span class="line">  <span class="n">message</span> <span class="o">=</span> <span class="s2">&quot;Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># 前面说过 deploy_branch  = &quot;master&quot;</span>
</span><span class="line">  <span class="no">Bundler</span><span class="o">.</span><span class="n">with_clean_env</span> <span class="p">{</span> <span class="nb">system</span> <span class="s2">&quot;git push origin </span><span class="si">#{</span><span class="n">deploy_branch</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">3. 发布博文过程</h2>

<h3 id="section-3">3.1. 新建一篇博文</h3>

<p>打开终端，输入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">  <span class="err">$</span> <span class="n">rake</span> <span class="n">new_post</span><span class="o">[</span><span class="s2">&quot;Hi, octopress&quot;</span><span class="o">]</span>  <span class="c1"># &quot;Hi, octopress&quot; 是文章的标题</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后在 <code>octopress/source/_posts</code> 目录下我们会看到命名格式为 <code>"2015-10-14-Hi-octopress.markdown"</code> 的文件。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile ，这是实现方法</span>
</span><span class="line">  <span class="n">filename</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">posts_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2"></span>
</span><span class="line"><span class="s2">  </span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">to_url</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">new_post_ext</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开新建的 <code>"2015-10-14-Hi-octopress.markdown"</code> 文件（我用的 <a href="http://mouapp.com/">Mou</a>，免费还好用），会发现头文件有如下内容（不要删除这段信息）：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="o">---</span>
</span><span class="line">  <span class="ss">layout</span><span class="p">:</span> <span class="n">post</span>             <span class="c1">#代表是一片博文</span>
</span><span class="line">  <span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;hello world&quot;</span>
</span><span class="line">  <span class="ss">date</span><span class="p">:</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">14</span> <span class="mi">19</span><span class="p">:</span><span class="mi">59</span><span class="p">:</span><span class="mi">22</span> <span class="o">+</span><span class="mi">0800</span>
</span><span class="line">  <span class="ss">comments</span><span class="p">:</span> <span class="kp">true</span>         <span class="c1">#是否允许评论</span>
</span><span class="line">  <span class="ss">categories</span><span class="p">:</span>             <span class="c1">#分类</span>
</span><span class="line">  <span class="o">---</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>头部布局实现原理：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># 查看 Rakefile，头部布局实现</span>
</span><span class="line">  <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;layout: post&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;title: </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/&amp;/</span><span class="p">,</span><span class="s1">&#39;&amp;&#39;</span><span class="p">)</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;date: </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d %H:%M:%S %z&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;comments: true&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;categories: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在最后面的－－－下面就可以开始我们的正文啦～</p>

<h3 id="section-4">3.2. 预览新建的博文</h3>

<p>终端执行如下命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">  <span class="err">$</span> <span class="n">sudo</span> <span class="n">rake</span> <span class="n">generate</span>
</span><span class="line">  <span class="err">$</span> <span class="n">rake</span> <span class="n">preview</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在浏览器中打开<a href="http://localhost:4000/">http://localhost:4000</a>,即可以预览我们刚 post 的博客效果。</p>

<h3 id="section-5">3.3. 发布新建的博文</h3>

<p>终端执行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">sudo</span> <span class="n">rake</span> <span class="n">deploy</span>  <span class="c1">#deploy blog 到 Github Pages</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最后别忘了，push 下本地的 octopress 到 source：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span><span class="s1">&#39;post test blog&#39;</span>
</span><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">source</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>OK，到此，本地 octopress 博客部署到 Github Pages 完成了，打开访问你的个人博客看看效果吧。额，因为还没有做布局修改，留到下一篇介绍～</p>

<p class="info">部署这一块，自己花了挺长时间研究的，大体上理清了自己之前在做时的一些疑问。现在回头再看 Github 上的目录和本地的目录，一下子明朗了不少。不知道你是不是也觉得呢？</p>

<blockquote>
  <p>本篇参考：</p>

  <p><a href="http://octopress.org/docs/deploying/github/#custom_domains">Deploying to Github Pages</a></p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于 Octopress & Github Pages 搭建博客（一）]]></title>
    <link href="http://jonyfang.github.io/blog/2015/10/13/starting_blog_with_octopress_1/"/>
    <updated>2015-10-13T13:13:00+08:00</updated>
    <id>http://jonyfang.github.io/blog/2015/10/13/starting_blog_with_octopress_1</id>
    <content type="html"><![CDATA[<p class="info">一直以来想有个属于自己的博客空间，或许是出于一种归属感吧。就这样知道了 WordPress、Jekyll、Hexo 和 Octopress。一番对比后选择了 Octopress，相信追随大神的脚步应该不会错。Octopress 接触有一个多星期了，幸运的是经过一番折腾算是弄出点了模样。这里总结下 <strong><code>基于 Octopress 及 Github 搭建博客</code></strong> 的过程及自己 <strong><code>中间遇到的一些问题的解决办法</code></strong>。技术上不一定完全精确，若有大神围观望指正：)
<br /><br />
使用的是 Mac OS X 系统，不一定适用于 Windows 的童鞋。（勿拍砖…）
<br /><br />
这是最终的实现效果：<a href="http://jonyfang.github.io/" target="_blank"> I’m Jony</a></p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#octopress--jekyll--github-pages-" id="markdown-toc-octopress--jekyll--github-pages-">1. Octopress 与 Jekyll &amp; Github Pages 的关系</a></li>
  <li><a href="#section" id="markdown-toc-section">2. 准备工作</a>    <ul>
      <li><a href="#git" id="markdown-toc-git">2.1. 安装 Git</a></li>
      <li><a href="#ruby" id="markdown-toc-ruby">2.2. 安装 Ruby</a></li>
    </ul>
  </li>
  <li><a href="#octopress" id="markdown-toc-octopress">3. 本地安装 Octopress</a></li>
  <li><a href="#section-1" id="markdown-toc-section-1">4. 预览效果</a></li>
</ul>

<h2 id="octopress--jekyll--github-pages-">1. Octopress 与 Jekyll &amp; Github Pages 的关系</h2>

<p><code>Octopress</code> 是基于 <code>Jekyll</code> 的静态博客框架。</p>

<p><code>GitHub Pages</code> 这里用于显示托管在 <code>GitHub</code> 上的静态网页，是 GitHub 提供的一项服务。</p>

<p>总的来说也就是我们使用基于 <code>Jekyll</code> 的 <code>Octopress</code> 生成本地的静态网站，然后将静态的网站托管到 <code>Github</code> 为我们提供的 <code>Github Pages</code> 服务上。最后访问<code>博客地址</code>就可以显示我们的个人博客网站了。</p>

<h2 id="section">2. 准备工作</h2>

<h3 id="git">2.1. 安装 Git</h3>

<p>前往 Git 官网 <a href="http://git-scm.com/">点击这里</a> ，按下图提示下载安装（一般 Mac OS X自带 Git 环境，终端执行 git -v 可查看 Git 版本）。</p>

<p><img src="http://jonyfang.github.io/images/octopress/git_downloads.png" alt="git_downloads" /></p>

<h3 id="ruby">2.2. 安装 Ruby</h3>

<p>这是 <a href="https://www.ruby-lang.org/en/">Ruby 官网</a>，这里就不详细介绍 Ruby 啦，总之 Ruby 很 NB，后面静下心研究下。好吧，回到 Ruby 的安装。</p>

<p>打开终端，执行如下命令，<code>安装 RVM</code>，同时也会安装最新的 Ruby：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">get</span><span class="o">.</span><span class="n">rvm</span><span class="o">.</span><span class="n">io</span> <span class="o">|</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="n">stable</span> <span class="o">--</span><span class="n">ruby</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装完，执行如下命令，<code>查看 Ruby 版本</code> (-v = –version)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">ruby</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果你的 Ruby 版本不低于 <code>1.9.3</code>，可直接跳转到 <code>安装 RubyGems</code>。否则需要执行如下命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">rvm</span> <span class="n">install</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span><span class="line">  <span class="err">$</span> <span class="n">rvm</span> <span class="n">use</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装 RubyGems：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">rvm</span> <span class="n">rubygems</span> <span class="n">latest</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>现在我们再执行命令 <code>ruby -v</code> 查看 Ruby版本，会看到现在已经是 2.0.0 了。</p>

<p>呼，准备工作搞定！</p>

<h2 id="octopress">3. 本地安装 Octopress</h2>

<p>前面做了那么多准备，主角总算要上场了。</p>

<p>首先，将 Octopress 的项目 <code>clone</code> 到本地，终端执行如下命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">git</span> <span class="nb">clone</span> <span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="n">octopress</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>进入 octopress 目录，安装 Octopress 所需要的<code>依赖库（dependencies）</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># 安装过程中可能会遇到权限问题，我们需要在命令前面加上 sudo 再执行，并输入登录密码。</span>
</span><span class="line">  <span class="c1"># sudo 全称：super user do，也就是以 root 用户身份来执行</span>
</span><span class="line">
</span><span class="line">  <span class="err">$</span> <span class="n">sudo</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">bundler</span>
</span><span class="line">  <span class="err">$</span> <span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p class="warning">这里在不翻墙的情况下，可能会遇到一个问题：<code>sudo gem install bundler</code> 执行后，一直没有响应。这是由于国内网络原因（你懂的），导致<a href="http://rubygems.org/" target="_blank"> rubygems.org </a>存放在 <code>Amazon S3</code> 上面的资源文件间歇性连接失败。所以你会遇到 <code>gem install rack</code> 或 <code>bundle install</code> 的时候半天没有响应的情况。</p>

<p>幸运的是国内某大神帮我们解决了这一心头大患，我们可以用<code>淘宝的 Ruby 镜像</code>来替换原来的镜像。只需终端执行下面的命令即可：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">gem</span> <span class="n">sources</span> <span class="o">-</span><span class="n">a</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">ruby</span><span class="o">.</span><span class="n">taobao</span><span class="o">.</span><span class="n">org</span><span class="o">/</span> <span class="o">-</span><span class="n">r</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span><span class="o">/</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># 下一命令查看切换后结果</span>
</span><span class="line">  <span class="err">$</span> <span class="n">gem</span> <span class="n">sources</span> <span class="o">-</span><span class="n">l</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后会看到这样的输出：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="o">***</span> <span class="no">CURRENT</span> <span class="no">SOURCES</span> <span class="o">***</span>
</span><span class="line">
</span><span class="line">  <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">ruby</span><span class="o">.</span><span class="n">taobao</span><span class="o">.</span><span class="n">org</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这就说明我们切换到<code>淘宝的 Ruby 镜像</code>了，再次安装 Octopress 所需要的依赖库就会发现现在可以了。</p>

<p>最后安装下默认主题：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1"># rake 全称：ruby make</span>
</span><span class="line">  <span class="err">$</span> <span class="n">rake</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p class="addition">上面提到的 <code>Ruby 镜像</code>问题，还有另外两种解决方法:
<br /><br />
（1）比较原始的方法——手动更改：打开 <code>octopress</code> 文件夹 -&gt; 打开 <code>Gemfile</code> 文件 -&gt; 将 <code>source "https://rubygems.org"</code> 改为 <code>source "https://ruby.taobao.org"</code> 就可以了。
<br /><br />
（2）第二种相对方便点，因为我们使用的是 Gemfile，所以我们可以用 Bundler 的 <a href="http://bundler.io/v1.5/bundle_config.html#gem-source-mirrors">Gem 源代码镜像命令</a>，这样我们就不用改 Gemfile 的 source 了。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">cd</span> <span class="n">octopress</span>
</span><span class="line">  <span class="err">$</span> <span class="n">bundle</span> <span class="n">config</span> <span class="n">mirror</span><span class="o">.</span><span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">ruby</span><span class="o">.</span><span class="n">taobao</span><span class="o">.</span><span class="n">org</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">4. 预览效果</h2>

<p>好，经过上面的功夫，我们已经在本地搭建了一个简易版的 Octopress 博客。</p>

<p>我们来看看效果吧。在终端执行命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="err">$</span> <span class="n">sudo</span> <span class="n">rake</span> <span class="n">preview</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开浏览器，输入 <code>http://localhost:4000/</code>，就可以看到效果了。虽然比较简陋，但让人挺高兴的，你觉得呢？</p>

<p><img src="http://jonyfang.github.io/images/octopress/octo_newpage.png" alt="octopress 本地显示效果" /></p>

<p>到这里，我们算是初步结束了本地安装过程，下一篇我们会把<code>本地的 Octopress</code> 部署到 <code>Github</code>，那么下篇再见喽～</p>

<blockquote>
  <p>本篇参考：</p>

  <p><a href="http://octopress.org/docs/setup/">Octopress Setup</a></p>

  <p><a href="http://bundler.io/v1.5/bundle_config.html#gem-source-mirrors">Gem Source Mirrors</a></p>
</blockquote>
]]></content>
  </entry>
  
</feed>
